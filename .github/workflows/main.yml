name: ‚úÖ RDP + Tailscale Setup (v2 Fixed)

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 120

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # -------------------------------------------------------
      # 1Ô∏è‚É£ Generate Random Credentials & Create User
      # -------------------------------------------------------
      - name: Create RDP user and print credentials
        shell: pwsh
        run: |
          # Generate strong random password (16 chars)
          $chars = (48..57) + (65..90) + (97..122) + (33..47)
          $pw = -join (1..16 | ForEach-Object { [char]($chars | Get-Random) })
          $username = "rdpuser"

          Write-Host "=== RDP CREDENTIALS ==="
          Write-Host "USERNAME: $username"
          Write-Host "PASSWORD: $pw"
          Write-Host "======================="

          # Save credentials for later steps
          echo "USERNAME=$username" >> $env:GITHUB_ENV
          echo "PASSWORD=$pw" >> $env:GITHUB_ENV

          # Create user safely (non-interactive)
          try {
            if (Get-Command New-LocalUser -ErrorAction SilentlyContinue) {
              $securePw = ConvertTo-SecureString $pw -AsPlainText -Force
              if (Get-LocalUser -Name $username -ErrorAction SilentlyContinue) {
                Write-Host "User exists, resetting password..."
                Set-LocalUser -Name $username -Password $securePw
              } else {
                New-LocalUser -Name $username -Password $securePw -FullName "RDP User" -Description "Created by GitHub Actions" -PasswordNeverExpires:$true
              }
              Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username -ErrorAction Stop
              Write-Host "‚úÖ Local user created via PowerShell (New-LocalUser)."
            } else {
              throw "New-LocalUser unavailable"
            }
          } catch {
            Write-Host "‚ö†Ô∏è New-LocalUser failed: $($_.Exception.Message)"
            Write-Host "Fallback to net user (auto-confirm legacy prompt)"
            cmd /c "echo Y | net user $username $pw /add"
            cmd /c "net localgroup \"Remote Desktop Users\" $username /add"
            Write-Host "‚úÖ Fallback user creation done."
          }

      # -------------------------------------------------------
      # 2Ô∏è‚É£ Enable RDP + Firewall Rules
      # -------------------------------------------------------
      - name: Enable Remote Desktop
        shell: pwsh
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Write-Host "‚úÖ Remote Desktop enabled & firewall rule set."

      # ------------------------------------------------------
      # 3Ô∏è‚É£ Install and Connect Tailscale (fixed download)
      # -------------------------------------------------------
      - name: Install and Connect to Tailscale
        shell: pwsh
        env:
          TAILSCALE_AUTHKEY: ${{ secrets.TAILSCALE_AUTHKEY }}
        run: |
          Write-Host "üì¶ Downloading Tailscale MSI..."
          $tailscaleUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-latest.msi"
          $installer = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tailscaleUrl -OutFile $installer

          Write-Host "üì¶ Installing Tailscale..."
          Start-Process -FilePath "msiexec.exe" -ArgumentList "/i `"$installer`" /qn" -Wait -NoNewWindow

          # Wait a moment to ensure service starts
          Start-Sleep -Seconds 5

          Write-Host "üîó Connecting to Tailscale..."
          $tailscaleExe = "C:\Program Files\Tailscale\tailscale.exe"
          if (-Not (Test-Path $tailscaleExe)) {
            throw "Tailscale executable not found at expected path: $tailscaleExe"
          }

          & $tailscaleExe up --authkey $env:TAILSCALE_AUTHKEY --hostname GitHubRDP --accept-routes

          Write-Host "üåê Checking Tailscale status..."
          & $tailscaleExe status


      # -------------------------------------------------------
      # 4Ô∏è‚É£ Show Access Info
      # -------------------------------------------------------
      - name: Show connection details
        shell: pwsh
        run: |
          $ip = & "C:\Program Files\Tailscale\tailscale.exe" ip -4
          Write-Host "=============================="
          Write-Host "üéØ Connect via RDP at: $ip"
          Write-Host "üë§ Username: $env:USERNAME"
          Write-Host "üîë Password: $env:PASSWORD"
          Write-Host "=============================="
          Write-Host "‚ö†Ô∏è Use the Tailscale IP above in your RDP client."
